package com.antiaction.classfile;

public class Constants {

	public static final int MAGIC = 0xCAFEBABE;

	/** // Declared public; may be accessed from outside its package. */
	public static final int ACC_PUBLIC = 0x0001;
	/** Declared private; accessible only within the defining class / usable only within the defining class. */
	public static final int ACC_PRIVATE = 0x0002;
	/** Declared protected; may be accessed within subclasses. */
	public static final int ACC_PROTECTED = 0x0004;
	/** Declared static. */
	public static final int ACC_STATIC = 0x0008;
	/** Declared final; must not be overridden / no subclasses allowed / no further assignment after initialization. */
	public static final int ACC_FINAL = 0x0010;
	/** Treat superclass methods specially when invoked by the invokespecial instruction. */
	public static final int ACC_SUPER = 0x0020;
	/** Declared synchronized; invocation is wrapped in a monitor lock. */
	public static final int ACC_SYNCHRONIZED = 0x0020;
	/** A bridge method, generated by the compiler. */
	public static final int ACC_BRIDGE = 0x0040;
	/** Declared volatile; cannot be cached. */
	public static final int ACC_VOLATILE = 0x0040;
	/** Declared transient; not written or read by a persistent object manager. */
	public static final int ACC_TRANSIENT = 0x0080;
	/** Declared with variable number of arguments. */
	public static final int ACC_VARARGS = 0x0080;
	/** Declared native; implemented in a language other than Java. */
	public static final int ACC_NATIVE = 0x0100;
	/** Is an interface, not a class. */
	public static final int ACC_INTERFACE = 0x0200;
	/** Declared abstract; must not be instantiated / no implementation is provided. */
	public static final int ACC_ABSTRACT = 0x0400;
	/** Declared strictfp; floating-point mode is FP-strict. */
	public static final int ACC_STRICT = 0x0800;
	/** Declared synthetic; Not present in the source code. */
	public static final int ACC_SYNTHETIC = 0x1000;
	/** Declared as an annotation type. */
	public static final int ACC_ANNOTATION = 0x2000;
	/** Declared as an enum type / as an element of an enum. */
	public static final int ACC_ENUM = 0x4000;

	public static final int ACCESS_FLAGS_MASK = ACC_PUBLIC | ACC_FINAL | ACC_SUPER | ACC_INTERFACE | ACC_ABSTRACT | ACC_SYNTHETIC | ACC_ANNOTATION | ACC_ENUM;

	public static final int FIELD_ACCESS_FLAGS_MASK = ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL | ACC_VOLATILE | ACC_TRANSIENT | ACC_SYNTHETIC | ACC_ENUM;

	public static final int METHOD_ACCESS_FLAGS_MASK = ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL | ACC_SYNCHRONIZED | ACC_BRIDGE | ACC_VARARGS | ACC_NATIVE | ACC_ABSTRACT | ACC_STRICT | ACC_SYNTHETIC;

}
